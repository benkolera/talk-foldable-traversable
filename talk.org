* Foldable & Traversable

(Why typeclasses are awesome)

 Lightning Talk for the:
 [[http://bfpg.org/][Brisbane Functional Programming Group]]
 2014-09-23

[[http://twitter.com/benkolera][Ben Kolera (@benkolera)]]

* Typeclasses

             +----------+             +---------+
             | Foldable |        -----+ Functor |
             +----+-----+       /     +----+----+
                  |            /           |
                  |     +-----/            |
                  |     |                  |
                  v     v                  v
            +-------------+         +-------------+
            | Traversable |         | Applicative |
            +-------------+         +------+------+
                                           |
                                           |
                                           v
                                      +---------+
                                      |  Monad  |
                                      +---------+
* Foldable

Something that has foldr (or foldMap)

#+BEGIN_SRC haskell
fold ["ab","c"]

instance Foldable [] where
  foldr :: (a -> b -> b) -> b -> [a] -> b
  foldr f z []     = z
  foldr f z (x:xs) = x `f` foldr f z xs
#+END_SRC
* And this
  And more stuff
